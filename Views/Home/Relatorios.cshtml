<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Relat√≥rio de An√°lise Descritiva</title>
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #3498db;
            --accent-color: #e74c3c;
            --light-color: #ecf0f1;
            --dark-color: #34495e;
            --success-color: #2ecc71;
            --warning-color: #f39c12;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            color: #333;
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            background-color: var(--primary-color);
            color: white;
            padding: 20px 0;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        h1 {
            font-size: 24px;
            font-weight: 600;
        }

        .controls {
            display: flex;
            gap: 15px;
            margin: 20px 0;
            flex-wrap: wrap;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        label {
            font-size: 14px;
            font-weight: 500;
        }

        select,
        input {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: white;
        }

        button {
            background-color: var(--secondary-color);
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #2980b9;
        }

        .table-container {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            overflow: hidden;
            margin-bottom: 30px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th {
            background-color: var(--primary-color);
            color: white;
            padding: 12px 15px;
            text-align: left;
            font-weight: 500;
            position: sticky;
            top: 0;
        }

        td {
            padding: 12px 15px;
            border-bottom: 1px solid #eee;
        }

        tr:hover {
            background-color: #f9f9f9;
        }

        .subcategoria-completa {
            font-weight: 500;
            color: var(--primary-color);
        }

        .maturity-level {
            display: inline-block;
            width: 24px;
            height: 24px;
            border-radius: 50%;
            text-align: center;
            line-height: 24px;
            font-size: 12px;
            font-weight: bold;
            color: white;
        }

        .level-1 {
            background-color: #e74c3c;
        }

        .level-2 {
            background-color: #e67e22;
        }

        .level-3 {
            background-color: #f1c40f;
            color: #333;
        }

        .level-4 {
            background-color: #2ecc71;
        }

        .level-5 {
            background-color: #3498db;
        }

        .recommendations {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            padding: 20px;
        }

        .recommendations h2 {
            margin-bottom: 15px;
            color: var(--primary-color);
            font-size: 20px;
        }

        .recommendation-item {
            margin-bottom: 15px;
            padding-left: 20px;
            position: relative;
        }

        .recommendation-item:before {
            content: "‚Ä¢";
            color: var(--secondary-color);
            font-weight: bold;
            position: absolute;
            left: 0;
        }

        .summary {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .summary-card {
            flex: 1;
            min-width: 200px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            padding: 15px;
            text-align: center;
        }

        .summary-card h3 {
            font-size: 14px;
            color: #666;
            margin-bottom: 10px;
        }

        .summary-value {
            font-size: 24px;
            font-weight: bold;
            color: var(--primary-color);
        }

        .export-btn {
            background-color: var(--success-color);
            margin-left: auto;
        }

        media (max-width: 768px) {
            .header-content {
                flex-direction: column;
                gap: 15px;
            }

            th,
            td {
                padding: 8px 10px;
                font-size: 14px;
            }

            .controls {
                flex-direction: column;
            }
        }
    </style>
</head>

<body>
    <header>
        <div class="container">
            <div class="header-content">
                <h1>Consulta cen√°rio futuro:</h1>
            </div>
        </div>
    </header>

    <div class="table-container">
        <table id="tabelaCenarios" border="1">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Subcategoria</th>
                    <th>Prioridade</th>
                    <th>N√≠vel</th>
                    <th>Pol√≠tica</th>
                    <th>Pr√°tica</th>
                    <th>Artefato</th>
                    <th>Fun√ß√£o</th>
                    <th>Refer√™ncia</th>
                    <th>Data Registro</th>
                </tr>
            </thead>
            <tbody id="tbodyCenarios"> <!-- ADD ID HERE -->
            </tbody>
        </table>
    </div>

    <script>
        async function carregarCenarios() {
            try {
                console.log('üöÄ Iniciando carregamento...');

                // 1. Busca os cen√°rios
                const responseCenarios = await fetch('http://localhost:5263/api/CenarioFuturo');
                if (!responseCenarios.ok) throw new Error('Erro ao buscar cen√°rios');
                const cenarios = await responseCenarios.json();

                // 2. Busca as subcategorias
                const responseSubcategorias = await fetch('http://localhost:5263/api/Subcategorias');
                const subcategorias = await responseSubcategorias.json();

                // 3. Busca as fun√ß√µes
                const responseFuncoes = await fetch('http://localhost:5263/api/Funcoes');
                const funcoes = await responseFuncoes.json();

                console.log('üìä Cen√°rios:', cenarios);
                console.log('üìã Subcategorias:', subcategorias);
                console.log('üî§ Fun√ß√µes:', funcoes);

                // 4. Formata os cen√°rios
                const cenariosFormatados = cenarios.map(cenario => {
                    const subcategoriaInfo = subcategorias.find(sub => sub.id === cenario.subcategoria);

                    let formato = `ID: ${cenario.subcategoria}`;

                    if (subcategoriaInfo) {
                        // Encontra a fun√ß√£o correspondente usando a coluna FUNCAO da subcategoria
                        const funcaoInfo = funcoes.find(f => f.id === subcategoriaInfo.funcao);
                        const codigoFuncao = funcaoInfo ? funcaoInfo.codigo : 'FN';

                        // Formato: fun√ß√£o.categoria-subcategoria
                        // Usa subcategoriaInfo.categoria (n√∫mero) e subcategoriaInfo.subcategoria (c√≥digo)
                        formato = `${codigoFuncao}.${subcategoriaInfo.categoria}-${subcategoriaInfo.subcategoria}`;
                    }

                    return {
                        ...cenario,
                        subcategoriaFormatada: formato
                    };
                });

                console.log('‚úÖ Cen√°rios formatados:', cenariosFormatados);
                exibirCenarios(cenariosFormatados);

            } catch (error) {
                console.error('üí• Erro:', error);

                // Fallback: usa apenas IDs
                try {
                    const response = await fetch('http://localhost:5263/api/CenarioFuturo');
                    const data = await response.json();
                    const cenariosFallback = data.map(c => ({
                        ...c,
                        subcategoriaFormatada: `ID: ${c.subcategoria}`
                    }));
                    exibirCenarios(cenariosFallback);
                } catch (fallbackError) {
                    console.error('üí• Erro no fallback:', fallbackError);
                    exibirCenarios([]);
                }
            }
        }

        function exibirCenarios(cenarios) {
            const tbody = document.querySelector('#tabelaCenarios tbody');
            if (!tbody) {
                console.error('‚ùå Elemento tbody n√£o encontrado!');
                return;
            }

            tbody.innerHTML = '';

            if (cenarios.length === 0) {
                tbody.innerHTML = '<tr><td colspan="10" style="text-align: center; color: #666; padding: 20px;">Nenhum dado dispon√≠vel</td></tr>';
                return;
            }

            cenarios.forEach(c => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
            <td>${c.id}</td>
            <td class="subcategoria-completa">${c.subcategoriaFormatada}</td>
            <td>${c.prioridade || '-'}</td>
            <td>${c.nivel || '-'}</td>
            <td>${c.poliT_ALVO || '-'}</td>
            <td>${c.praT_ALVO || '-'}</td>
            <td>${c.arteF_ALVO || '-'}</td>
            <td>${c.funC_ALVO || '-'}</td>
            <td>${c.reF_INFO_ALVO || '-'}</td>
            <td>${formatarData(c.datA_REGISTRO)}</td>
        `;
                tbody.appendChild(tr);
            });

            console.log(`‚úÖ Tabela atualizada com ${cenarios.length} registros`);
        }

        function formatarData(dataString) {
            if (!dataString) return '-';
            try {
                const data = new Date(dataString);
                return data.toLocaleDateString('pt-BR') + ' ' + data.toLocaleTimeString('pt-BR');
            } catch {
                return dataString;
            }
        }

        document.addEventListener('DOMContentLoaded', carregarCenarios);
    </script>
</body>

</html>